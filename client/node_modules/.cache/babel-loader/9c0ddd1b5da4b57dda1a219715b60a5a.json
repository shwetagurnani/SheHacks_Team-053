{"ast":null,"code":"var _jsxFileName = \"/home/shweta/Desktop/elegance/client/src/pages/DoctorDashboard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport DashboardCard from \"../components/DashboardCard\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  main: {\n    whiteSpace: \"nowrap\",\n    maxHeight: 650,\n    height: 618\n  },\n  AppBar: {\n    position: \"relative\",\n    backgroundColor: \"#f7f7f7\",\n    height: 55\n  },\n  AppBarContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: 55,\n    minHeight: 55\n  },\n  typo: {\n    fontFamily: \"Poppins\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"normal\",\n    color: \"#3a3737\"\n  },\n  typoTotal: {\n    marginLeft: 5,\n    height: 20,\n    fontFamily: \"Poppins\",\n    fontSize: 14,\n    fontWeight: \"bold\",\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"normal\",\n    color: \"#9999a8\"\n  },\n  Button: {\n    margin: 20,\n    backgroundColor: \"white\",\n    border: \"1px solid #008000\"\n  }\n}));\n\nfunction ElevationScroll(props) {\n  _s();\n\n  const {\n    children,\n    window\n  } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func\n};\n\nconst Application = props => {\n  _s2();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [underApplication, setUnderApplication] = useState([]);\n  const [acceptedApplication, setAcceptedApplication] = useState([]);\n  const [rejectedApplication, setRejectedApplication] = useState([]);\n  const [underSize, setUnderSize] = useState(\"\");\n  const [acceptSize, setAcceptSize] = useState(\"\");\n  const [rejectSize, setRejectSize] = useState(\"\");\n  useEffect(() => {\n    const SendingRequest = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3000/doctor/getAllAppointment\", {\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\")\n          },\n          method: 'GET'\n        });\n        const responseData = await response.json();\n        console.log(responseData.appointment);\n        let temp1 = [];\n        let temp2 = [];\n        let temp3 = [];\n\n        for (let i = 0; i < responseData.appointment.length; i++) {\n          if (responseData.appointment[i].status === 0) temp1.push(responseData.appointment[i]);\n          if (responseData.appointment[i].status === 1) temp2.push(responseData.appointment[i]);\n          if (responseData.appointment[i].status === 2) temp3.push(responseData.appointment[i]);\n        }\n\n        setUnderApplication(temp1);\n        setAcceptedApplication(temp2);\n        setRejectedApplication(temp3);\n        setUnderSize(temp1.length);\n        setAcceptSize(temp2.length);\n        setRejectSize(temp3.length);\n      } catch (err) {\n        console.log(\"hey error\");\n        console.log(err);\n      }\n    };\n\n    SendingRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.main,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ElevationScroll, { ...props,\n            children: /*#__PURE__*/_jsxDEV(AppBar, {\n              className: classes.AppBar,\n              children: /*#__PURE__*/_jsxDEV(Toolbar, {\n                className: classes.AppBarContent,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.typo,\n                  children: \"Under Consideration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.typoTotal,\n                  children: underSize\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              my: 2,\n              overflow: \"auto\",\n              children: underApplication.map(item => {\n                return /*#__PURE__*/_jsxDEV(DashboardCard, {\n                  underApplication: item,\n                  option: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ElevationScroll, { ...props,\n            children: /*#__PURE__*/_jsxDEV(AppBar, {\n              className: classes.AppBar,\n              children: /*#__PURE__*/_jsxDEV(Toolbar, {\n                className: classes.AppBarContent,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.typo,\n                  children: \"Accepted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.typoTotal,\n                  children: acceptSize\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              my: 2,\n              overflow: \"auto\",\n              children: acceptedApplication.map(item => {\n                return /*#__PURE__*/_jsxDEV(DashboardCard, {\n                  underApplication: item,\n                  option: false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ElevationScroll, { ...props,\n            children: /*#__PURE__*/_jsxDEV(AppBar, {\n              className: classes.AppBar,\n              children: /*#__PURE__*/_jsxDEV(Toolbar, {\n                className: classes.AppBarContent,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.typo,\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.typoTotal,\n                  children: rejectSize\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              my: 2,\n              overflow: \"auto\",\n              children: rejectedApplication.map(item => {\n                return /*#__PURE__*/_jsxDEV(DashboardCard, {\n                  underApplication: item,\n                  option: false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Application, \"TshQAMW+RhsWdNtluQzazhTz3ug=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c2 = Application;\nexport default Application;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"Application\");","map":{"version":3,"sources":["/home/shweta/Desktop/elegance/client/src/pages/DoctorDashboard.js"],"names":["React","useState","useEffect","makeStyles","Grid","Box","Typography","AppBar","Toolbar","Container","CssBaseline","useScrollTrigger","PropTypes","Button","DashboardCard","useHistory","useStyles","theme","main","whiteSpace","maxHeight","height","position","backgroundColor","AppBarContent","display","alignItems","minHeight","typo","fontFamily","fontSize","fontWeight","fontStretch","fontStyle","lineHeight","letterSpacing","color","typoTotal","marginLeft","margin","border","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","propTypes","element","isRequired","func","Application","classes","history","underApplication","setUnderApplication","acceptedApplication","setAcceptedApplication","rejectedApplication","setRejectedApplication","underSize","setUnderSize","acceptSize","setAcceptSize","rejectSize","setRejectSize","SendingRequest","response","fetch","headers","localStorage","getItem","method","responseData","json","console","log","appointment","temp1","temp2","temp3","i","length","status","push","err","root","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport DashboardCard from \"../components/DashboardCard\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    whiteSpace: \"nowrap\",\n    maxHeight: 650,\n    height: 618,\n  },\n  AppBar: {\n    position: \"relative\",\n    backgroundColor: \"#f7f7f7\",\n    height: 55,\n  },\n  AppBarContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: 55,\n    minHeight: 55,\n  },\n  typo: {\n    fontFamily: \"Poppins\",\n    fontSize: 16,\n    fontWeight: \"normal\",\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"normal\",\n    color: \"#3a3737\",\n  },\n  typoTotal: {\n    marginLeft: 5,\n    height: 20,\n    fontFamily: \"Poppins\",\n    fontSize: 14,\n    fontWeight: \"bold\",\n    fontStretch: \"normal\",\n    fontStyle: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"normal\",\n    color: \"#9999a8\",\n  },\n  Button: {\n    margin: 20,\n    backgroundColor: \"white\",\n    border: \"1px solid #008000\",\n  },\n}));\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n\nconst Application = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [underApplication, setUnderApplication] = useState([]);\n  const [acceptedApplication, setAcceptedApplication] = useState([]);\n  const [rejectedApplication, setRejectedApplication] = useState([]);\n  const [underSize, setUnderSize] = useState(\"\");\n  const [acceptSize, setAcceptSize] = useState(\"\");\n  const [rejectSize, setRejectSize] = useState(\"\");\n\n  useEffect(() => {\n    const SendingRequest = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3000/doctor/getAllAppointment\", {\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\"),\n          },\n          method: 'GET'\n        });\n        const responseData = await response.json();\n        console.log(responseData.appointment);\n        let temp1 = [];\n        let temp2 = [];\n        let temp3 = [];\n        for (let i = 0; i < responseData.appointment.length; i++) {\n          if (responseData.appointment[i].status === 0)\n            temp1.push(responseData.appointment[i]);\n          if (responseData.appointment[i].status === 1)\n            temp2.push(responseData.appointment[i]);\n          if (responseData.appointment[i].status === 2)\n            temp3.push(responseData.appointment[i]);\n        }\n        setUnderApplication(temp1);\n        setAcceptedApplication(temp2);\n        setRejectedApplication(temp3);\n        setUnderSize(temp1.length);\n        setAcceptSize(temp2.length);\n        setRejectSize(temp3.length);\n      } catch (err) {\n          console.log(\"hey error\")\n        console.log(err);\n      }\n    };\n    SendingRequest();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Toolbar />\n      <Grid container className={classes.main}>\n        <Grid item xs={12} lg={4}>\n          <React.Fragment>\n            <CssBaseline />\n            <ElevationScroll {...props}>\n              <AppBar className={classes.AppBar}>\n                <Toolbar className={classes.AppBarContent}>\n                  <Typography variant=\"h6\" className={classes.typo}>\n                    Under Consideration\n                  </Typography>\n                  <Typography variant=\"h6\" className={classes.typoTotal}>\n                    {underSize}\n                  </Typography>\n                </Toolbar>\n              </AppBar>\n            </ElevationScroll>\n            <Container>\n              <Box my={2} overflow=\"auto\">\n                {underApplication.map((item) => {\n                  return (\n                    <DashboardCard underApplication={item} option={true} />\n                  );\n                })}\n              </Box>\n            </Container>\n          </React.Fragment>\n        </Grid>\n\n        <Grid item xs={12} lg={4}>\n          <React.Fragment>\n            <CssBaseline />\n            <ElevationScroll {...props}>\n              <AppBar className={classes.AppBar}>\n                <Toolbar className={classes.AppBarContent}>\n                  <Typography variant=\"h6\" className={classes.typo}>\n                    Accepted\n                  </Typography>\n                  <Typography variant=\"h6\" className={classes.typoTotal}>\n                    {acceptSize}\n                  </Typography>\n                </Toolbar>\n              </AppBar>\n            </ElevationScroll>\n            <Container>\n              <Box my={2} overflow=\"auto\">\n                {acceptedApplication.map((item) => {\n                  return (\n                    <DashboardCard underApplication={item} option={false} />\n                  );\n                })}\n              </Box>\n            </Container>\n          </React.Fragment>\n        </Grid>\n        <Grid item xs={12} lg={4}>\n          <React.Fragment>\n            <CssBaseline />\n            <ElevationScroll {...props}>\n              <AppBar className={classes.AppBar}>\n                <Toolbar className={classes.AppBarContent}>\n                  <Typography variant=\"h6\" className={classes.typo}>\n                    Rejected\n                  </Typography>\n                  <Typography variant=\"h6\" className={classes.typoTotal}>\n                    {rejectSize}\n                  </Typography>\n                </Toolbar>\n              </AppBar>\n            </ElevationScroll>\n            <Container>\n              <Box my={2} overflow=\"auto\">\n                {rejectedApplication.map((item) => {\n                  return (\n                    <DashboardCard underApplication={item} option={false} />\n                  );\n                })}\n              </Box>\n            </Container>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Application;\n"]},"metadata":{},"sourceType":"module"}